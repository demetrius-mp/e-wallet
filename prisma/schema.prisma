// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement()) @map("id")
  email    String @unique @map("email")
  name     String @map("name")
  password String @map("password")

  transactions Transaction[]
  groups       Group[]

  archived Boolean @default(false) @map("archived")

  @@map("users")
}

model Group {
  id   Int    @id @default(autoincrement()) @map("id")
  name String @map("name")

  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id])

  transactions Transaction[]

  @@map("groups")
}

model Transaction {
  id Int @id @default(autoincrement()) @map("id")

  name         String    @map("name")
  value        Float     @map("value")
  date         DateTime  @map("date") @db.Date
  endsAt       DateTime? @map("ends_at") @db.Date
  installments Int?      @map("installments")
  tags         String[]  @map("tags")

  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id])

  groupId Int?   @map("group_id")
  group   Group? @relation(fields: [groupId], references: [id])

  archived Boolean @default(false) @map("archived")

  @@map("transactions")
}
